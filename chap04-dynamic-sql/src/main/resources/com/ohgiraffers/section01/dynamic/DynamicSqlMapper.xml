<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.dynamic.DynamicSqlMapper">
    <!-- <if> 태그 : test 속석의 조건에 속성의 조건에 해당 할 때만 엘리먼트 구문을 쿼리에 추가
        gte gt lte lt
        <![CDATA[    ]> 대괄호 안에서는 부등호 문자 사용 가능
        -->
    <resultMap id="menuResultMap" type="MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <select id="selectMenuByPrice" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
            MENU_CODE,
            MENU_NAME,
            MENU_PRICE,
            CATEGORY_CODE,
            ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        <if test="price gt 0 and price lte 10000">
            <![CDATA[
            AND MENU_PRICE < #{price}
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND MENU_PRICE BETWEEN 10000 AND #{price}
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND MENU_PRICE BETWEEN 20000 AND #{price}
        </if>
        <if test="price gt 30000">
            AND MENU_PRICE BETWEEN 30000 AND #{price}
        </if>
    </select>

    <select id="searchMenu" parameterType="com.ohgiraffers.common.SearchCriteria" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM
            TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%',#{value},'%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{value}
        </if>
    </select>

    <select id="searchMenuBySupCategory"  parameterType="com.ohgiraffers.common.SearchCriteria" resultMap="menuResultMap">
        <!-- <choose> <when test = " "> similar to switch case in JAVA
            otherwise like default in JAVA  -->
        SELECT *
        FROM TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND CATEGORY_CODE IN (1, 4, 5)
            </when>
            <when test="value == '음료'">
                AND CATEGORY_CODE IN (2)
            </when>
            <otherwise>
                AND CATEGORY_CODE IN (3)
            </otherwise>
        </choose>
        ORDER BY MENU_CODE
    </select>
    <!-- comment.
            <foreach> 태그 : java 했던 for 문의 역할을 한다.
            1. collection 속성 : 반복을 수행 할 대상
            2. item 속성 : 반복을 수행 할 때마다 꺼내올 값을 담아둘 변수
            3. open 속성 : <foreach> 엘리먼트 구문의 가장 앞에 올 문자
            4. separator 속성 : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
            5. close 속성 : <foreach> 엘리먼트 구문의 마지막에 올 문자
     -->

    <select id="searchMenuByRandomCode" parameterType="hashmap" resultMap="menuResultMap">
        SELECT *
        FROM TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        AND
            MENU_CODE IN
        <foreach collection="randomCodeList" item="menuCode" open="(" close=")" separator=",">
            #{menuCode}
        </foreach>
    </select>

    <select id="searchMenuByCodeOrSearchAll" parameterType="com.ohgiraffers.common.SearchCriteria" resultMap="menuResultMap">
        SELECT
        *
        FROM
        TBL_MENU
        <if test="condition != null and condition eq 'menuCode'">
            <where>
                MENU_CODE = #{value}
            </where>
        </if>
    </select>

    <!-- comment. 1. 문제 해결 방안 <where> 태그 사용
                where 태그
                - 내부에 구문이 where 절 시작하지 않으면 자동으로 where 붙여준다.
                - 또한, where 엘리먼트 내부에 모든 쿼리문이 동작하지 않는다면 where 무시한다
                - 주의점은 쿼리문에 where 를 직접 입력하면 where where 구문이 되므로 주의.
                - 엘리먼트 구문이 AND || OR 로 시작하면 자동으로 지워준다.
         -->

    <select id="searchMenuByNameOrCategory" parameterType="hashmap" resultMap="menuResultMap">
        SELECT *
        FROM TBL_MENU
        <!--<where>
            <if test="nameValue != null">
                MENU_NAME LIKE CONCAT('%',#{nameValue}, '%')
            </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </where>-->
        <trim prefix="WHERE" prefixOverrides="AND || OR">
            <if test="nameValue != null">
                MENU_NAME LIKE CONCAT('%',#{nameValue}, '%')
            </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </trim>

    </select>

    <!-- trim 태그
    - where엘리먼트가 기본적으로 처리하는 기능 외에 추가적인 기능을 수행한다
    - 조회 조건에 and or 로 시작하지 않는 경우
    - -->

    <update id="modifyMenu" parameterType="hashmap">
        <!--UPDATE TBL_MENU
        SET
            MENU_NAME = #{name},
            CATEGORY_CODE ={categoryCode},
            ORDERABLE_STATUS = #{orderableStatus}
        WHERE
            MENU_CODE = #{code}-->
        UPDATE TBL_MENU
        <set>
            <if test="name != null and name != ''">
                MENU_NAME = #{name}
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
               ,CATEGORY_CODE ={categoryCode}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </set>
        WHERE MENU_CODE = #{code}
    </update>
</mapper>